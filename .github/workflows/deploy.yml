name: CI/CD to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2️⃣ Docker Buildx setup
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3️⃣ Docker login (Docker Hub)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 4️⃣ Build and push Docker image
    - name: Build and push Docker image
      run: |
        docker build -t annurdev/kub-dep-app:latest .
        docker push annurdev/kub-dep-app:latest

    # 5️⃣ Configure AWS CLI
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # 6️⃣ Update kubeconfig for EKS
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name eks-test-cluster --region ${{ secrets.AWS_REGION }}

    # 7️⃣ Deploy to EKS
    - name: Deploy to EKS
      run: |
        # Apply configmap
        kubectl apply -f k8s/configmap.yaml

        # Create secret dynamically from GitHub Secrets
        kubectl create secret generic nestjs-secret \
          --from-literal=DB_PASSWORD=$DB_PASSWORD \
          --from-literal=DATABASE_URL=$DATABASE_URL \
          --from-literal=OPENAI_API_KEY=$OPENAI_API_KEY \
          --dry-run=client -o yaml | kubectl apply -f -

        # Apply deployment and service
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
